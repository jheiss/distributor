distributor element
----------------

Specifies general configuration information

bindaddr:
	IP address or hostname for Distributor to listen on
	If set to "0.0.0.0" then Distributor will bind to the wildcard address
port:
	Port for Distributor to listen on
algorithm:
	Algorithm used to distribute connections to targets.
	Valid values:  roundrobin, hash
terminate_on_disable:
	If set to "yes" then Distributor will terminate all connections to
	a target upon detecting that the target has failed.  The default
	behavior is to stop sending new connections to the target but to
	continue to pass traffic for existing connections.
connection_timeout:
	How long to wait for a connection to each target before moving on
	to the next one.  In milliseconds.
service_type:
	Specifies the type of service that the targets are providing.  Used
	to determine what type of service test to use against the targets to
	ensure they are functioning properly.  
	Valid values:  none, ldap, http, script

target_group element
--------------------

Targets are the servers that Distributor distributes traffic to.
Targets are grouped into a list of groups.  The LB will try all of the
servers in the first group, and only if they are all unavailable it
will proceed to the servers in the second group, etc.

order:
	Order in which to try target groups.  Order numbers don't have to
	be sequential or start at 0 but they must be unique.  Note that
	Distributor will renumber your groups to be sequential and start at 0.

log element
-----------

Specifies the logging done by the LB.

type:
	Valid values:  console, file
	Console loggers log to stderr
level:
	Valid values:  off|severe|warning|info|config|fine|finer|finest|all

LDAP test_parameters element
----------------------------

The parameters for the testing done if the targets are providing LDAP
services.

frequency:
	How often to test each target.  In milliseconds.
timeout:
	How long to give the test to complete for a target before giving
	up and declaring the target dead.  In milliseconds.
ssl_type:
	Valid values:  none, ldaps, starttls
ssl_keystore:
	Java Keystore containing the certificate of the CA that signed your
	LDAP server SSL certificates.  If ssl_type is "none" then this is
	ignored.  If your SSL certs were signed by a major CA like Verisign
	or Thawte you can probably skip this and let Java use its default
	Keystore which has those CA certs.  Otherwise you'll need to create
	this Keystore:
	keytool -keystore <filename> -import -file /path/to/ca.pem -alias <myca>
	(It will prompt for a password, it doesn't matter what you enter)
auth_type:
	Valid values:  none, simple, sasl
sasl_mechanism:
	If auth_type is not "sasl" then this is ignored.
auth_principal:
	Generally a username.  If auth_type is "none" then this is ignored.
auth_credential:
	Generally a password.  If auth_type is "none" then this is ignored.

	querydn element
	---------------
	The DN to lookup, must be fully qualified.

		required_attribute
		------------------
		Specifies an attribute that the queried DN must have

		name:
			The attribute name
		value:
			The optional value that the attribute must have.  If not
			specified the attribute will be accepted no matter what
			value it has.

HTTP test_parameters element
----------------------------

The parameters for the testing done if the targets are providing HTTP
services.

frequency:
	How often to test each target.  In milliseconds.
timeout:
	How long to give the test to complete for a target before giving
	up and declaring the target dead.  In milliseconds.
user_agent:
	The string that distributor will use in the User-Agent field (aka
	"browser") when communicating with the HTTP server.  Some web
	servers are configured to send different pages based on the browser that
	the client is using so you might need to pretend to be a certain
	browser.  This setting is optional.
use_ssl:
	Valid values:  yes, no
auth_type:
	Valid values:  none, basic, digest
auth_principal:
	Generally a username.  If auth_type is "none" then this is ignored.
auth_credential:
	Generally a password.  If auth_type is "none" then this is ignored.

	get element
	------------
	Document to GET from server

	path:
		The path to the document you want tested.  The test module will
		assemble a URL for each back end server as follows:
		http[s]://<server:<port>/<path>

		response_code
		-------------
		Specifies that the server must return a specific response code
		for this document.

		value:
			The numeric response code that must be returned.

		content_type
		------------
		Specifies that the server must return a specific content type
		(aka MIME type) for this document

		value:
			The content type that must be returned

		document_text
		-------------
		Specifies text that must occur in this document.  Currently the
		matching is done line-by-line so the given text must occur on
		one line in the document.

		value:
			The text to search for

Script test_parameters element
----------------------------

A special type of service test which allows you to provide a script/
program to do the testing.  The script will be executed with the
hostname and port of a server to test and should return 0 if the
server is functioning, non-zero if it is not.

frequency:
	How often to test each target.  In milliseconds.
timeout:
	How long to give the test to complete for a target before giving
	up and declaring the target dead.  In milliseconds.
script:
	The script/program to execute.  The server hostname and port will
	be provided as command line arguments 1 and 2.

type_mapping element
--------------------

Maps a service type to a Java class that will perform that test.  Only
needs to be modified when adding a new service type.

